version: '3.1'

services:
  fastapi:
    container_name: ${DOCKER_SERVER_NAME}
    build:
      context: ./fastapi
      dockerfile: dockerfile
    ports:
      - ${DOCKER_SERVER_PORT}:8000
    networks:
      - mynet
    environment:
      - 'MONGODB_SETTINGS={
        "host": "${DOCKER_MONGODB_NAME}",
        "port": ${DOCKER_MONGODB_PORT},
        "db_name": "personal_sercretary",
        "username": "${DOCKER_MONGO_INITDB_ROOT_USERNAME}",
        "password": "${DOCKER_MONGO_INITDB_ROOT_PASSWORD}",
        "ssl": false,
        "ssl_ca_certs": "",
        "retryWrites": false
      }'
    restart: always

  nginx:
    container_name: ${DOCKER_NGINX_NAME}
    build:
      context: ./nginx
      dockerfile: dockerfile
    ports:
      - ${DOCKER_NGINX_PORT}:80
    depends_on:
      - fastapi
    networks:
      - mynet
    environment:
      SERVER_NAME: ${DOCKER_SERVER_NAME}
      SERVER_PORT: 8000
    command: /bin/bash -c "envsubst < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    restart: always

  mongodb:
    image: mongo:6.0
    container_name: ${DOCKER_MONGODB_NAME}
    ports:
      - "${DOCKER_MONGODB_PORT}:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - mynet
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DOCKER_MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DOCKER_MONGO_INITDB_ROOT_PASSWORD}
    restart: always

networks:
  mynet:

volumes:
  mongo-data: